name: New Tag

on:
  push:
    branches:
      - "releases/v*"
    tags-ignore:
      - "*"
    
  workflow_dispatch:


jobs:
  build:
    runs-on: ubuntu-latest
    env:
      SDK_URL_PATH: https://downloads.openwrt.org/releases/23.05.5/targets/ramips/mt7621
      SDK_NAME: -sdk-
      ARCH: ramips-mt7621
      CACHE_DIR: ~/cache
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Cache
        uses: actions/cache@v4
        with:
          path: ${{ env.CACHE_DIR }}
          key: ${{ runner.os }}:openwrt-frp:${{ env.ARCH }}:cache:${{ github.run_number }}
          restore-keys: |
            ${{ runner.os }}:openwrt-frp:${{ env.ARCH }}:cache:

      - name: Install Dependencies
        run: |
          sudo apt-get update && \
            sudo apt-get install -yq gettext libncurses5-dev xsltproc 

      - name: Prepare SDK Home
        run: |
          echo "SDK_HOME=$(mktemp -d)" >> $GITHUB_ENV

      - name: Build package
        env:
          OPENWRT_GOLANG_COMMIT: ${{ secrets.OPENWRT_GOLANG_COMMIT }}
        run: sh compile.sh

      - name: Save Build Result
        uses: actions/upload-artifact@v4
        with:
          name: frp
          path: ${{ env.SDK_HOME }}/**/*.ipk
          retention-days: 7



  tag:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 10
  
      - name: Get Version
        id: get_version
        run: |
          pkg_version="$(grep '^PKG_VERSION:' Makefile 2>/dev/null | cut -d'=' -f2 | xargs)"
          pkg_release="$(grep '^PKG_RELEASE:' Makefile 2>/dev/null | cut -d'=' -f2 | xargs)"
  
          if [ "${GITHUB_REF#refs/heads/}" = "releases/v${pkg_version}-${pkg_release}" ] ; then
            echo "version=${pkg_version}" >> "$GITHUB_OUTPUT"
            echo "release=${pkg_release}" >> "$GITHUB_OUTPUT"
          else
            echo "version=0" >> "$GITHUB_OUTPUT"
            echo "release=0" >> "$GITHUB_OUTPUT"
          fi
  
      - name: Commit New Tag
        if: steps.get_version.outputs.version != '0' && steps.get_version.outputs.release != '0'
        run: |
          version="${{ steps.get_version.outputs.version }}"
          release="${{ steps.get_version.outputs.release }}"
  
          tag_name="v${version}-${release}"
          release_branch="releases/$tag_name"
  
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
  
          git checkout "$release_branch"
  
          git fetch origin master:master
          git rebase master
          git checkout master
  
          git rebase "$release_branch"
          git push origin HEAD:master
  
          git tag -a "$tag_name" -m "$tag_name"
          git push origin "$tag_name"
  
          git push origin --delete "$release_branch"
